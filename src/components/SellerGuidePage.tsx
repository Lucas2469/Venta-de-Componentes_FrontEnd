import React, { useState } from "react";
import {
  BookOpen,
  CreditCard,
  Clock,
  Package,
  Calendar,
  Star,
  Shield,
  CheckCircle,
  AlertTriangle,
  TrendingUp,
  Users,
  MapPin,
  ChevronRight,
  ArrowRight
} from "lucide-react";

interface SellerGuidePageProps {
  onNavigate: (page: string) => void;
}

export function SellerGuidePage({ onNavigate }: SellerGuidePageProps) {
  const [activeSection, setActiveSection] = useState<string | null>("start");

  const sections = [
    {
      id: "start",
      title: "C√≥mo empezar a vender",
      icon: TrendingUp,
      color: "pink",
      content: [
        {
          step: "1",
          title: "Compra cr√©ditos",
          description: "Para publicar productos necesitas cr√©ditos. 1 cr√©dito = 1 unidad de stock. Ve a 'Comprar Cr√©ditos', selecciona un pack, sube tu comprobante de pago (transferencia/dep√≥sito) y espera la aprobaci√≥n (m√°ximo 24 horas).",
          tip: "üí° Tip: Compra packs grandes para ahorrar. Los cr√©ditos nunca vencen."
        },
        {
          step: "2",
          title: "Configura tus horarios de atenci√≥n",
          description: "Ve a 'Mis Horarios' y establece los d√≠as y horas en que estar√°s disponible para encuentros. Los compradores SOLO podr√°n agendar dentro de estos horarios. Puedes tener m√∫ltiples bloques por d√≠a (ej: 9:00-12:00 y 14:00-18:00).",
          tip: "‚ö†Ô∏è Importante: Sin horarios configurados, nadie podr√° agendar citas contigo."
        },
        {
          step: "3",
          title: "Crea tu primer anuncio",
          description: "Ve a 'Crear Anuncio', completa todos los campos (nombre, descripci√≥n, precio, stock, categor√≠a), selecciona un punto de encuentro seguro y publica. Los cr√©ditos se descontar√°n inmediatamente seg√∫n el stock que publiques.",
          tip: "üö® Revisa TODO antes de publicar: NO puedes editar despu√©s. Si quieres cambiar algo, deber√°s eliminar el anuncio y volver a crearlo (gastando cr√©ditos nuevamente)."
        },
        {
          step: "4",
          title: "Espera agendamientos",
          description: "Los compradores ver√°n tu anuncio en el cat√°logo y podr√°n agendar citas. Recibir√°s notificaciones por cada solicitud de agendamiento. Revisa la solicitud y conf√≠rmala si puedes cumplir con la cita.",
          tip: "‚úÖ Responde r√°pido: Los compradores valoran vendedores que confirman pronto."
        }
      ]
    },
    {
      id: "credits",
      title: "Sistema de Cr√©ditos",
      icon: CreditCard,
      color: "purple",
      content: [
        {
          step: "üí∞",
          title: "¬øCu√°ntos cr√©ditos necesito?",
          description: "Necesitas 1 cr√©dito por cada unidad de stock. Ejemplo: Si quieres publicar 15 Arduinos, necesitas 15 cr√©ditos. Si publicas 5 resistencias y 10 LEDs en anuncios separados, necesitas 15 cr√©ditos en total.",
          tip: ""
        },
        {
          step: "üì¶",
          title: "Packs disponibles",
          description: "Pack B√°sico: 10 cr√©ditos (Bs. 50) | Pack Est√°ndar: 25 cr√©ditos (Bs. 100) | Pack Pro: 50 cr√©ditos (Bs. 175) | Pack Premium: 100 cr√©ditos (Bs. 300). Mientras m√°s compras, m√°s ahorras.",
          tip: "üí° Los packs grandes tienen mejor precio por cr√©dito."
        },
        {
          step: "‚è≥",
          title: "Proceso de aprobaci√≥n",
          description: "Un administrador revisar√° manualmente tu comprobante de pago. Las compras se aprueban generalmente en menos de 24 horas. Recibir√°s una notificaci√≥n cuando se apruebe o rechace (con motivo si es rechazada).",
          tip: "üì∏ Aseg√∫rate de que el comprobante sea legible y muestre claramente el monto."
        },
        {
          step: "‚ôæÔ∏è",
          title: "Los cr√©ditos NO vencen",
          description: "Una vez acreditados en tu cuenta, los cr√©ditos permanecen disponibles indefinidamente. √ösalos cuando quieras sin preocuparte por fechas de expiraci√≥n.",
          tip: ""
        }
      ]
    },
    {
      id: "appointments",
      title: "Gesti√≥n de Agendamientos",
      icon: Calendar,
      color: "teal",
      content: [
        {
          step: "üîî",
          title: "Notificaciones de agendamiento",
          description: "Cuando un comprador agenda una cita contigo, recibir√°s una notificaci√≥n inmediata. Ve a 'Mis Citas como Vendedor' para ver los detalles: producto, cantidad, fecha, hora, punto de encuentro y datos del comprador.",
          tip: ""
        },
        {
          step: "‚úÖ",
          title: "Confirmar agendamientos = descuenta stock",
          description: "IMPORTANTE: El stock de tu producto se descuenta SOLO cuando CONFIRMAS el agendamiento, no cuando el comprador lo agenda. Esto te permite revisar cada solicitud antes de comprometer tu inventario. Confirma solo si est√°s seguro de poder cumplir.",
          tip: "‚ö†Ô∏è Una vez confirmado, el stock NO se puede restaurar autom√°ticamente."
        },
        {
          step: "‚è∞",
          title: "Cancelaci√≥n autom√°tica",
          description: "Si NO confirmas un agendamiento antes de la fecha y hora programada, el sistema lo CANCELA AUTOM√ÅTICAMENTE cada hora. El comprador recibe una notificaci√≥n de la cancelaci√≥n autom√°tica. Esto protege a los compradores de vendedores inactivos.",
          tip: "üö® Revisa tus notificaciones frecuentemente para no perder ventas."
        },
        {
          step: "‚úîÔ∏è",
          title: "Marcar como completado",
          description: "Despu√©s del encuentro exitoso, marca la transacci√≥n como 'Completado' en 'Mis Citas como Vendedor'. Esto permite que ambos (vendedor y comprador) se califiquen mutuamente.",
          tip: ""
        }
      ]
    },
    {
      id: "inventory",
      title: "Gesti√≥n de Inventario",
      icon: Package,
      color: "orange",
      content: [
        {
          step: "üìâ",
          title: "Cu√°ndo se descuenta el stock",
          description: "El stock se descuenta autom√°ticamente cuando CONFIRMAS una cita, no cuando la agendan. Cada confirmaci√≥n descuenta 1 unidad de stock del producto correspondiente.",
          tip: ""
        },
        {
          step: "üö´",
          title: "Productos agotados",
          description: "Cuando el stock de un producto llega a 0, el anuncio se marca autom√°ticamente como 'agotado' y desaparece del cat√°logo. Los compradores ya no podr√°n agendar citas para ese producto.",
          tip: ""
        },
        {
          step: "üìÖ",
          title: "Expiraci√≥n de anuncios",
          description: "Los anuncios expiran autom√°ticamente despu√©s de 1 A√ëO desde la fecha de publicaci√≥n. Los anuncios expirados se marcan como 'expirados' y se ocultan del cat√°logo. Si quieres seguir vendiendo ese producto, deber√°s crear un nuevo anuncio.",
          tip: ""
        },
        {
          step: "‚ùå",
          title: "Eliminar anuncios",
          description: "Puedes eliminar anuncios activos en cualquier momento desde 'Mis Productos'. Sin embargo, los cr√©ditos gastados NO se reembolsan. Solo elimina si realmente no quieres vender m√°s ese producto.",
          tip: "‚ö†Ô∏è No hay reembolso de cr√©ditos al eliminar anuncios."
        }
      ]
    },
    {
      id: "ratings",
      title: "Sistema de Calificaciones",
      icon: Star,
      color: "yellow",
      content: [
        {
          step: "‚≠ê",
          title: "Calificaci√≥n promedio",
          description: "Tu calificaci√≥n promedio (1-5 estrellas) es visible para todos los compradores en el cat√°logo. Una buena calificaci√≥n aumenta la confianza y tus posibilidades de venta. Mant√©n un promedio alto siendo puntual, honesto y profesional.",
          tip: ""
        },
        {
          step: "üîÑ",
          title: "Sistema bidireccional",
          description: "Despu√©s de completar una transacci√≥n, T√ö calificas al comprador Y el comprador te califica a TI. Ambas calificaciones son importantes para mantener un marketplace confiable.",
          tip: ""
        },
        {
          step: "üîí",
          title: "Calificaciones permanentes",
          description: "Las calificaciones NO pueden editarse ni eliminarse despu√©s de publicadas. Esto garantiza transparencia. Si recibes una calificaci√≥n negativa, conc√©ntrate en mejorar para futuras transacciones.",
          tip: "üí° Responde profesionalmente a cr√≠ticas para demostrar tu compromiso."
        }
      ]
    },
    {
      id: "best-practices",
      title: "Buenas Pr√°cticas",
      icon: CheckCircle,
      color: "green",
      content: [
        {
          step: "‚ö°",
          title: "Responde r√°pido",
          description: "Los compradores prefieren vendedores que confirman agendamientos r√°pidamente. Revisa tus notificaciones varias veces al d√≠a y responde lo antes posible.",
          tip: ""
        },
        {
          step: "‚úÖ",
          title: "Solo confirma si puedes cumplir",
          description: "No confirmes agendamientos si no est√°s seguro de poder cumplir. Las cancelaciones de √∫ltimo minuto afectan tu reputaci√≥n y la experiencia del comprador.",
          tip: ""
        },
        {
          step: "‚è∞",
          title: "S√© puntual",
          description: "Llega al punto de encuentro a la hora acordada. La puntualidad es clave para una buena calificaci√≥n. Si llegas tarde, comun√≠calo al comprador por adelantado.",
          tip: ""
        },
        {
          step: "üîç",
          title: "Verifica el producto antes de entregar",
          description: "Aseg√∫rate de que el producto est√© en perfectas condiciones antes del encuentro. Lleva el producto exacto que describiste en el anuncio para evitar malentendidos.",
          tip: ""
        },
        {
          step: "üìù",
          title: "Descripciones detalladas",
          description: "Al crear anuncios, escribe descripciones completas y precisas. Incluye especificaciones t√©cnicas, estado del producto (nuevo/usado), y cualquier detalle relevante. Recuerda: NO puedes editar despu√©s de publicar.",
          tip: "üö® Revisa bien antes de publicar: no hay edici√≥n posterior."
        },
        {
          step: "üì∏",
          title: "Fotos de calidad",
          description: "Usa fotos claras y bien iluminadas de los productos. Las fotos de calidad generan m√°s confianza y aumentan tus posibilidades de venta.",
          tip: ""
        }
      ]
    },
    {
      id: "security",
      title: "Consejos de Seguridad",
      icon: Shield,
      color: "red",
      content: [
        {
          step: "üìç",
          title: "Solo puntos de encuentro verificados",
          description: "NUNCA aceptes encuentros fuera de los puntos seguros del sistema (centros comerciales, plazas principales, cafeter√≠as reconocidas). Estos lugares son p√∫blicos, con c√°maras de seguridad y tr√°nsito constante de personas.",
          tip: "üö® Rechaza cualquier solicitud de encuentro en lugares privados."
        },
        {
          step: "üí≥",
          title: "No compartas datos bancarios",
          description: "El sistema de cr√©ditos existe para que NO haya transacciones directas de dinero entre usuarios. NUNCA compartas tu n√∫mero de cuenta, CBU, o datos bancarios con compradores.",
          tip: ""
        },
        {
          step: "üö©",
          title: "Reporta comportamientos sospechosos",
          description: "Si un comprador te pide encontrarte en otro lugar, quiere pagar fuera del sistema, o tiene comportamiento extra√±o, rep√≥rtalo inmediatamente a soporte@electromarket.bo con todos los detalles.",
          tip: ""
        },
        {
          step: "üë•",
          title: "Lleva acompa√±ante si es necesario",
          description: "Si es tu primera venta o el producto es de alto valor, considera llevar un acompa√±ante al punto de encuentro para mayor seguridad.",
          tip: ""
        }
      ]
    },
    {
      id: "faq",
      title: "Preguntas Frecuentes",
      icon: BookOpen,
      color: "blue",
      content: [
        {
          step: "‚ùì",
          title: "¬øPuedo tener m√∫ltiples horarios por d√≠a?",
          description: "S√ç. Puedes configurar varios bloques de horarios para el mismo d√≠a. Ejemplo: Lunes 9:00-12:00 y Lunes 14:00-18:00. Esto te da flexibilidad para pausas o compromisos personales.",
          tip: ""
        },
        {
          step: "‚ùì",
          title: "¬øPuedo cambiar el precio o descripci√≥n despu√©s de publicar?",
          description: "NO. Una vez publicado un anuncio, NO puedes editarlo. Si necesitas cambiar algo (precio, descripci√≥n, punto de encuentro), debes eliminar el anuncio completo y crear uno nuevo. IMPORTANTE: Al eliminar, NO recuperas los cr√©ditos gastados, deber√°s usar cr√©ditos nuevos para republicar.",
          tip: "üö® Revisa TODO cuidadosamente antes de publicar. No hay edici√≥n posterior y no hay reembolso de cr√©ditos."
        },
        {
          step: "‚ùì",
          title: "¬øQu√© pasa si no confirmo a tiempo?",
          description: "Si no confirmas un agendamiento antes de la fecha y hora programada, el sistema lo CANCELA AUTOM√ÅTICAMENTE cada hora. El comprador recibe una notificaci√≥n y puede agendar con otro vendedor. Esto puede afectar tu reputaci√≥n si sucede frecuentemente.",
          tip: ""
        },
        {
          step: "‚ùì",
          title: "¬øPuedo vender productos de cualquier categor√≠a?",
          description: "S√≠, siempre que sean componentes electr√≥nicos, Arduino, Raspberry Pi, sensores, m√≥dulos, herramientas, etc. El sistema est√° dise√±ado para electr√≥nica. Productos fuera de estas categor√≠as pueden ser eliminados por administradores.",
          tip: ""
        },
        {
          step: "‚ùì",
          title: "¬øQu√© pasa si un comprador no llega al encuentro?",
          description: "Si el comprador no llega, puedes marcar el agendamiento como cancelado y calificarlo negativamente. Sin embargo, el stock YA FUE DESCONTADO cuando confirmaste, por lo que NO se restaura autom√°ticamente. Deber√°s contactar a soporte si necesitas ayuda.",
          tip: "üí° Confirma solo compradores con buena calificaci√≥n para reducir este riesgo."
        }
      ]
    }
  ];

  const getColorClasses = (color: string) => {
    const colors = {
      pink: { bg: "bg-pink-100", text: "text-pink-600", border: "border-pink-300", gradient: "from-pink-500 to-rose-500" },
      purple: { bg: "bg-purple-100", text: "text-purple-600", border: "border-purple-300", gradient: "from-purple-500 to-indigo-500" },
      teal: { bg: "bg-teal-100", text: "text-teal-600", border: "border-teal-300", gradient: "from-teal-500 to-cyan-500" },
      orange: { bg: "bg-orange-100", text: "text-orange-600", border: "border-orange-300", gradient: "from-orange-500 to-amber-500" },
      yellow: { bg: "bg-yellow-100", text: "text-yellow-600", border: "border-yellow-300", gradient: "from-yellow-500 to-orange-500" },
      green: { bg: "bg-green-100", text: "text-green-600", border: "border-green-300", gradient: "from-green-500 to-emerald-500" },
      red: { bg: "bg-red-100", text: "text-red-600", border: "border-red-300", gradient: "from-red-500 to-pink-500" },
      blue: { bg: "bg-blue-100", text: "text-blue-600", border: "border-blue-300", gradient: "from-blue-500 to-indigo-500" }
    };
    return colors[color as keyof typeof colors] || colors.pink;
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-pink-50 via-purple-50 to-teal-50">
      <div className="container mx-auto px-4 py-12 max-w-7xl">
        {/* Header */}
        <div className="text-center mb-12">
          <div className="flex justify-center mb-4">
            <div className="bg-gradient-to-br from-pink-600 to-purple-600 p-4 rounded-2xl shadow-lg">
              <BookOpen className="h-12 w-12 text-white" />
            </div>
          </div>
          <h1 className="text-5xl font-bold text-gray-900 mb-4">
            Gu√≠a del Vendedor
          </h1>
          <p className="text-xl text-gray-600 max-w-3xl mx-auto">
            Todo lo que necesitas saber para vender exitosamente en ELECTROMARKET
          </p>
        </div>

        {/* Quick Actions */}
        <div className="grid md:grid-cols-3 gap-6 mb-12">
          <button
            onClick={() => onNavigate('buy-credits')}
            className="bg-white rounded-xl shadow-lg p-6 border-2 border-transparent hover:border-pink-300 transition-all hover:shadow-xl group"
          >
            <CreditCard className="h-8 w-8 text-pink-600 mb-3 group-hover:scale-110 transition-transform" />
            <h3 className="font-bold text-gray-900 mb-2">Comprar Cr√©ditos</h3>
            <p className="text-sm text-gray-600">Comienza a vender comprando tu primer pack de cr√©ditos</p>
            <ArrowRight className="h-5 w-5 text-pink-600 mt-3 ml-auto" />
          </button>

          <button
            onClick={() => onNavigate('mis-horarios')}
            className="bg-white rounded-xl shadow-lg p-6 border-2 border-transparent hover:border-purple-300 transition-all hover:shadow-xl group"
          >
            <Clock className="h-8 w-8 text-purple-600 mb-3 group-hover:scale-110 transition-transform" />
            <h3 className="font-bold text-gray-900 mb-2">Configurar Horarios</h3>
            <p className="text-sm text-gray-600">Define tus d√≠as y horarios de atenci√≥n</p>
            <ArrowRight className="h-5 w-5 text-purple-600 mt-3 ml-auto" />
          </button>

          <button
            onClick={() => onNavigate('create-ad')}
            className="bg-white rounded-xl shadow-lg p-6 border-2 border-transparent hover:border-teal-300 transition-all hover:shadow-xl group"
          >
            <Package className="h-8 w-8 text-teal-600 mb-3 group-hover:scale-110 transition-transform" />
            <h3 className="font-bold text-gray-900 mb-2">Crear Anuncio</h3>
            <p className="text-sm text-gray-600">Publica tu primer producto</p>
            <ArrowRight className="h-5 w-5 text-teal-600 mt-3 ml-auto" />
          </button>
        </div>

        {/* Section Navigation */}
        <div className="bg-white rounded-2xl shadow-xl p-6 mb-8 border border-gray-100">
          <h2 className="text-2xl font-bold text-gray-900 mb-4">√çndice de Contenidos</h2>
          <div className="grid md:grid-cols-2 lg:grid-cols-4 gap-3">
            {sections.map((section) => {
              const Icon = section.icon;
              const colors = getColorClasses(section.color);
              const isActive = activeSection === section.id;

              return (
                <button
                  key={section.id}
                  onClick={() => setActiveSection(section.id)}
                  className={`flex items-center space-x-3 p-3 rounded-xl border-2 transition-all ${
                    isActive
                      ? `${colors.border} bg-gradient-to-r ${colors.gradient} text-white shadow-lg scale-105`
                      : `border-gray-200 hover:border-gray-300 bg-white hover:bg-gray-50`
                  }`}
                >
                  <Icon className={`h-5 w-5 flex-shrink-0 ${isActive ? 'text-white' : colors.text}`} />
                  <span className={`text-sm font-medium text-left ${isActive ? 'text-white' : 'text-gray-900'}`}>
                    {section.title}
                  </span>
                </button>
              );
            })}
          </div>
        </div>

        {/* Sections Content */}
        <div className="space-y-8">
          {sections
            .filter((section) => activeSection === null || activeSection === section.id)
            .map((section) => {
              const Icon = section.icon;
              const colors = getColorClasses(section.color);

              return (
                <section
                  key={section.id}
                  id={section.id}
                  className="bg-white rounded-2xl shadow-xl p-8 border border-gray-100"
                >
                  <div className="flex items-center space-x-4 mb-8">
                    <div className={`p-4 rounded-xl ${colors.bg}`}>
                      <Icon className={`h-8 w-8 ${colors.text}`} />
                    </div>
                    <h2 className="text-3xl font-bold text-gray-900">{section.title}</h2>
                  </div>

                  <div className="space-y-6">
                    {section.content.map((item, index) => (
                      <div
                        key={index}
                        className={`border-l-4 ${colors.border} pl-6 py-4 bg-gradient-to-r from-gray-50 to-transparent rounded-r-xl`}
                      >
                        <div className="flex items-start space-x-4">
                          <div className={`flex-shrink-0 w-10 h-10 rounded-full bg-gradient-to-br ${colors.gradient} text-white flex items-center justify-center font-bold text-lg shadow-lg`}>
                            {item.step}
                          </div>
                          <div className="flex-1">
                            <h3 className="text-xl font-bold text-gray-900 mb-2">{item.title}</h3>
                            <p className="text-gray-700 leading-relaxed mb-3">{item.description}</p>
                            {item.tip && (
                              <div className="bg-yellow-50 border border-yellow-200 rounded-lg p-3 flex items-start space-x-2">
                                <AlertTriangle className="h-5 w-5 text-yellow-600 flex-shrink-0 mt-0.5" />
                                <p className="text-sm text-yellow-900 font-medium">{item.tip}</p>
                              </div>
                            )}
                          </div>
                        </div>
                      </div>
                    ))}
                  </div>
                </section>
              );
            })}
        </div>

        {/* Footer CTA */}
        <div className="mt-12 bg-gradient-to-br from-pink-600 via-purple-600 to-teal-600 rounded-2xl shadow-2xl p-10 text-white text-center">
          <Users className="h-16 w-16 mx-auto mb-4" />
          <h2 className="text-3xl font-bold mb-4">¬øListo para empezar a vender?</h2>
          <p className="text-lg text-pink-100 mb-6 max-w-2xl mx-auto">
            √önete a cientos de vendedores exitosos en ELECTROMARKET. Configura tu cuenta en minutos y comienza a generar ventas hoy mismo.
          </p>
          <div className="flex flex-col sm:flex-row gap-4 justify-center">
            <button
              onClick={() => onNavigate('buy-credits')}
              className="bg-white text-pink-600 px-8 py-4 rounded-xl hover:bg-pink-50 transition-colors font-bold shadow-xl hover:shadow-2xl text-lg"
            >
              Comprar Cr√©ditos Ahora
            </button>
            <button
              onClick={() => onNavigate('help')}
              className="bg-white/10 backdrop-blur text-white border-2 border-white px-8 py-4 rounded-xl hover:bg-white/20 transition-colors font-bold text-lg"
            >
              Ir al Centro de Ayuda
            </button>
          </div>
        </div>
      </div>
    </div>
  );
}
